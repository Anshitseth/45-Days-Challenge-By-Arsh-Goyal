class Stack
{
public:
    // Initialize your data structure.
    int ss;
    deque<int> qd;
    Stack()
    {
        ss = 0;
    }

    // Pushes 'X' into the stack. Returns true if it gets pushed into the stack, and false otherwise.
    bool push(int x)
    {
        // Write your code here.
        qd.push_back(x);
        ss++;
        return true;
    }

    // Pops top element from Stack. Returns -1 if the stack is empty, otherwise returns the popped element.
    int pop()
    {
        // Write your code here.
        if(isEmpty())
        {
            return -1;
        }
        int d = qd.back();
        qd.pop_back();
        ss--;
        return d;
    }

    // Returns the topmost element of the stack. In case the stack is empty, it returns -1.
    int top()
    {
        // Write your code here.
        if(isEmpty())
        {
            return -1;
        }
        return qd.back();
    }

    // Returns true if the stack is empty, otherwise false.
    bool isEmpty()
    {
        // Write your code here.
        if(ss==0)
        {
            return true;
        }
        else
        {
            return false;
        }
    }

    // Returns the number of elements currently present in the stack.
    int size()
    {
        // Write your code here.
        return ss;
    }
};
