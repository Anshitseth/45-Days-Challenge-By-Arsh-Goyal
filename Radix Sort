#include<bits/stdc++.h>
using namespace std;
//step 1 - Find the largest value
int getMax(int arr[], int n)
{
    int mx = INT_MIN;
    for(int i = 0;i<n;i++)
    {
        if(arr[i]>mx)
        mx = arr[i];
    }
    return mx;
}

void countSort(int arr[], int n, int exp)
{
    //output array
    int output[n];
    int i, count[10] = {0};
    
    //store count of occurences
    for(i = 0; i<n;i++)
    {
        count[(arr[i]/exp)%10]++;
    }
     // Change count[i] so that count[i]
    // now contains actual position
    // of this digit in output[]
    for(i = 1;i<10;i++)
    {
        count[i] += count[i-1];
    }
    //build the output array
    for(i = n-1;i>=0;i--)
    {
        output[count[(arr[i]/exp)%10]-1] = arr[i];
        count[(arr[i]/exp)%10]--;
    }
    
    // Copy the output array to arr[],
    // so that arr[] now contains sorted
    // numbers according to current digit
    for(i = 0;i<n;i++)
    {
        arr[i] = output[i];
    }
}

void radixSort(int arr[], int n)
{
    
    //largest element
    int m = getMax(arr, n);
    
    //Do counting sort for each digit
    //Note that instead of passing digit
    //expression is passed
    //exp is 10^i
    //i here is current digit number
    for(int exp = 1;m/exp > 0; exp *= 10)
    {
        countSort(arr, n, exp);
    }
}

//to print an array
void printArray(int arr[], int n)
{
 for(int i = 0;i<n;i++)
{
 cout<<arr[i]<<" ";   
}
}


int main() {
    // Write C++ code here
    int arr[] = {170, 45, 75, 90, 802, 24, 2, 66};
    int n = sizeof(arr)/sizeof(arr[0]);
    radixSort(arr, n);
    printArray(arr, n);
    return 0;
}
