 private:
    void dfs(int node, vector<int> adj[], int vis[], vector<int> &ls)
    {
        vis[node] = 1;
        ls.push_back(node);
        for(auto it : adj[node])
        {
            if(!vis[it])
            {
                dfs(it,adj,vis, ls);
            }
        }
    }
  public:
    // Function to return a list containing the DFS traversal of the graph.
    vector<int> dfsOfGraph(int V, vector<int> adj[]) {
        // Code here
        int vis[V] = {0};
        vector<int> ls;
        for(int i = 0;i<V;i++)
        {
            if(!vis[i])
            {
                dfs(i, adj, vis, ls);
            }
        }
        return ls;
    }
