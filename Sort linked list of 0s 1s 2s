TC -> O(N)
SC ->O(1)
//Solution without data Replacement
void insertAtTail(Node* &tail,Node* curr)
{
    tail->next = curr;
    tail = curr;
}
Node* sortList(Node *head){
    // Write your code here.
    Node* zeroHead = new Node(-1);
    Node* zeroTail = zeroHead;
    Node* oneHead = new Node(-1);
    Node* oneTail = oneHead;
    Node* twoHead = new Node(-1);
    Node* twoTail = twoHead;
 
    Node* curr = head;
    while(curr!=NULL)
    {
        if(curr->data == 0)
        {
            insertAtTail(zeroTail,curr);
        }
        else if(curr->data == 1)
        {
            insertAtTail(oneTail,curr);
        }
        else if(curr->data == 2)
        {
            insertAtTail(twoTail,curr);
        }
        curr = curr->next;
    }


    if(oneHead->next!=NULL)
    {
        zeroTail->next = oneHead->next;
    }
    else
    {
        zeroTail->next = twoHead->next;
    }
    //if 1s linkedlist is not null
    oneTail->next = twoHead->next;
    twoTail->next = NULL;


    head = zeroHead->next;
    //removing dummy nodes
    delete zeroHead;
    delete oneHead;
    delete twoHead;

    return head;
}
