class Solution {
public:
    ListNode* reverseLinkedList(ListNode* l)
    {
        ListNode* curr = l;
        ListNode* prev = NULL;
        ListNode* next1 = NULL;
        while(curr!= NULL)
        {
            next1 = curr->next;
            curr->next = prev;
            prev = curr;
            curr = next1;
        }
        return prev;
    }
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* dummy = new ListNode();
        ListNode* temp = dummy;
        l1 = reverseLinkedList(l1);
        l2 = reverseLinkedList(l2);
        int carry = 0;
        while(l1!=NULL || l2!= NULL || carry)
        {
            int sum = 0;
            if(l1!= NULL)
            {
                sum+= l1->val;
                l1 = l1->next;
            }
            if(l2!= NULL)
            {
                sum+= l2->val;
                l2 = l2->next;
            }
            sum+=carry;
            carry = sum/10;
            ListNode* node = new ListNode(sum%10);
            temp->next = node;
            temp = temp->next;
        }
        return reverseLinkedList(dummy->next);
    }
};
